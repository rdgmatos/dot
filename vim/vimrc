" Enable filetype-specific indenting and plugins
filetype plugin indent on

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on "Enable syntax highlighting
  set hlsearch
endif

scriptencoding utf-8
set encoding=utf-8 nobomb
set fileformats=unix,dos,mac
set viewdir=/tmp

set nocompatible "We're running Vim, not Vi!
set nobackup
set nowritebackup
" set backupdir=/private/tmp " tell vim where to put its backup files
" set dir=/private/tmp " tell vim where to put swap files

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set shell=$SHELL
set autowrite " Writes on make/shell commands

colorscheme lanai
"tell the term has 256 colors
set t_Co=256
set modeline

set novisualbell " No blinking .
set noerrorbells " No noise.
set cf " Enable error files & error jumping.
set clipboard+=unnamed " Yanks go on clipboard instead.
set history=256 " Number of things to remember in history.
set ruler " Ruler on (show the cursor position all the time)
set nu " Line numbers on
set nowrap " Line wrapping off
set timeoutlen=250 " Time to wait after ESC (default causes an annoying delay)

set path=$PWD/public/**,$PWD/**
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize
"set statusline=%<%f\ %h%m%r%=%-20.(line=%l,col=%c%V,totlin=%L%)\%h%m%r%=%-40(,%n%Y%)\%P
set laststatus=2 " Always show status line.
set cursorline " highlight the current line in every window and update the highlight as the cursor moves.

set wildmode=list:longest   "make cmdline tab completion similar to bash
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~,*.pyc,*.class,*/tmp/*,*.so,*.swp,*.zip,*.gif,*.jpeg,*.jpg,*.png "stuff to ignore when tab completing

"vertical/horizontal scroll off settings
set scrolloff=3
set sidescrolloff=7
set sidescroll=1

" Formatting (some of these are for coding in C and C++)
set softtabstop=2
set tabstop=8
set ts=2
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set incsearch " do incremental searching

set cinoptions=:0,p0,t0
set cinwords=if,else,while,do,for,switch,case
set formatoptions=tcqr
set cindent
set autoindent " always set autoindenting on
set smarttab
set expandtab

"make Y consistent with C and D
nnoremap Y y$

" Only do this part when compiled with support for autocommands.
if has("autocmd")
  "jump to last cursor position when opening a file
  "dont do it when writing a commit log entry
  autocmd BufReadPost * call SetCursorPosition()

  " Removes trailing spaces when saving the buffer
  autocmd BufWritePre * :%s/\s\+$//e

  autocmd FileType ruby,perl,c,cpp,java,javascript,python,xml,xhtml,html set shiftwidth=2
  autocmd FileType xml setlocal foldmethod=syntax

  augroup filetypedetect
    autocmd BufNewFile,BufRead *.yml set filetype=ruby
    autocmd BufRead,BufNewFile Guardfile set filetype=ruby
  augroup END
endif

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mousehide  " Hide mouse after chars typed
  set mouse=a "use in all modes
endif

"folding settings
if has("folding")
  set foldmethod=indent   "fold based on indent
  set foldnestmax=3       "deepest fold is 3 levels
  set nofoldenable        "dont fold by default
  let g:xml_syntax_folding=1 "set up syntax folding automatically
endif

if has("gui_running")
  set guitablabel=%M%t
  set guioptions-=T  "recommend themes: desert molokai eclm_wombat vividchalk
  set guioptions-=m

  if has("gui_mac") || has("gui_macvim")
    set guifont=Monaco:h10
    " make Mac's Option key behave as the Meta key
    set invmmta
  endif
endif

"Load plugins using pathogen.vim
call pathogen#infect()

"Powerline.vim
let g:Powerline_symbols = 'fancy'

"Ctrl-P
let g:ctrlp_dotfiles = 0
let g:ctrlp_map = '<leader>i'
let g:ctrlp_custom_ignore = {'file': '\.git$\|\.hg$\|\.svn$\|.DS_Store\|.png$\|.gif$\|.jpg$\|.jpeg$|.log', 'dir': '(\.git$|\.hg$|\.svn$|coverage$|tmp$)$', 'link': '',}
"Open buffer of alredy opened files
nmap <silent> <Leader>o :CtrlPBuffer<CR>

"Change tabs
nmap <Tab> gt
nmap <S-Tab> gT

"Current path
cmap <C-e> <C-r>=expand('%:p:h')<CR>/

"Toggle Project tree
nmap <silent> <Leader>p :NERDTreeToggle<CR>

function! SetCursorPosition()
    if &filetype !~ 'commit\c'
        if line("'\"") > 0 && line("'\"") <= line("$")
            exe "normal g`\""
        endif
    end
endfunction

command! -nargs=0 Rdebugger :normal irequire "debugger"; debugger

" Visual
set showmatch  " Show matching brackets.
set mat=5  " Bracket blinking.
"set list

"make <c-l> clear the highlight as well as redraw
"nnoremap <C-L> :nohls<CR><C-L>
"inoremap <C-L> <C-O>:nohls<CR>

" Don't use Ex mode, use Q for formatting
"map Q to something useful
"noremap Q gq

